//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ClubbyBook.Business", "fk_authorrate_book", "author", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClubbyBook.Business.Author), "authorrate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubbyBook.Business.AuthorRate), true)]
[assembly: EdmRelationshipAttribute("ClubbyBook.Business", "fk_bookauthor_author", "author", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClubbyBook.Business.Author), "bookauthor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubbyBook.Business.BookAuthor), true)]
[assembly: EdmRelationshipAttribute("ClubbyBook.Business", "fk_authorrate_user", "user", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClubbyBook.Business.User), "authorrate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubbyBook.Business.AuthorRate), true)]
[assembly: EdmRelationshipAttribute("ClubbyBook.Business", "fk_bookauthor_book", "book", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClubbyBook.Business.Book), "bookauthor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubbyBook.Business.BookAuthor), true)]
[assembly: EdmRelationshipAttribute("ClubbyBook.Business", "fk_bookgenre_book", "book", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClubbyBook.Business.Book), "bookgenre", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubbyBook.Business.BookGenre), true)]
[assembly: EdmRelationshipAttribute("ClubbyBook.Business", "fk_bookrate_book", "book", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClubbyBook.Business.Book), "bookrate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubbyBook.Business.BookRate), true)]
[assembly: EdmRelationshipAttribute("ClubbyBook.Business", "fk_userbook_book", "book", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClubbyBook.Business.Book), "userbook", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubbyBook.Business.UserBook), true)]
[assembly: EdmRelationshipAttribute("ClubbyBook.Business", "fk_bookgenre_genre", "genre", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClubbyBook.Business.Genre), "bookgenre", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubbyBook.Business.BookGenre), true)]
[assembly: EdmRelationshipAttribute("ClubbyBook.Business", "fk_bookrate_user", "user", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClubbyBook.Business.User), "bookrate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubbyBook.Business.BookRate), true)]
[assembly: EdmRelationshipAttribute("ClubbyBook.Business", "fk_city_country", "country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClubbyBook.Business.Country), "city", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubbyBook.Business.City), true)]
[assembly: EdmRelationshipAttribute("ClubbyBook.Business", "fk_city_district", "district", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClubbyBook.Business.District), "city", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubbyBook.Business.City), true)]
[assembly: EdmRelationshipAttribute("ClubbyBook.Business", "fk_profile_city", "city", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClubbyBook.Business.City), "profile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubbyBook.Business.Profile), true)]
[assembly: EdmRelationshipAttribute("ClubbyBook.Business", "fk_conversationnotification_fromuser", "user", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClubbyBook.Business.User), "conversationnotification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubbyBook.Business.ConversationNotification), true)]
[assembly: EdmRelationshipAttribute("ClubbyBook.Business", "fk_conversationnotification_notificationid", "notification", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClubbyBook.Business.Notification), "conversationnotification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubbyBook.Business.ConversationNotification), true)]
[assembly: EdmRelationshipAttribute("ClubbyBook.Business", "fk_conversationnotification_touser", "user", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClubbyBook.Business.User), "conversationnotification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubbyBook.Business.ConversationNotification), true)]
[assembly: EdmRelationshipAttribute("ClubbyBook.Business", "fk_district_country", "country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClubbyBook.Business.Country), "district", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubbyBook.Business.District), true)]
[assembly: EdmRelationshipAttribute("ClubbyBook.Business", "fk_feedbacknotification_notificationid", "notification", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClubbyBook.Business.Notification), "feedbacknotification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubbyBook.Business.FeedbackNotification), true)]
[assembly: EdmRelationshipAttribute("ClubbyBook.Business", "fk_feedbacknotification_owneruser", "user", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClubbyBook.Business.User), "feedbacknotification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubbyBook.Business.FeedbackNotification), true)]
[assembly: EdmRelationshipAttribute("ClubbyBook.Business", "fk_genre_genre", "genre", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClubbyBook.Business.Genre), "genre1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubbyBook.Business.Genre), true)]
[assembly: EdmRelationshipAttribute("ClubbyBook.Business", "fk_systemnotification_notificationid", "notification", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClubbyBook.Business.Notification), "systemnotification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubbyBook.Business.SystemNotification), true)]
[assembly: EdmRelationshipAttribute("ClubbyBook.Business", "fk_profile_user", "user", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClubbyBook.Business.User), "profile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubbyBook.Business.Profile), true)]
[assembly: EdmRelationshipAttribute("ClubbyBook.Business", "fk_userrole_role", "role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClubbyBook.Business.Role), "userrole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubbyBook.Business.UserRole), true)]
[assembly: EdmRelationshipAttribute("ClubbyBook.Business", "fk_systemnotification_owneruser", "user", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClubbyBook.Business.User), "systemnotification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubbyBook.Business.SystemNotification), true)]
[assembly: EdmRelationshipAttribute("ClubbyBook.Business", "fk_userbook_user", "user", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClubbyBook.Business.User), "userbook", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubbyBook.Business.UserBook), true)]
[assembly: EdmRelationshipAttribute("ClubbyBook.Business", "fk_userrole_user", "user", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClubbyBook.Business.User), "userrole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubbyBook.Business.UserRole), true)]
[assembly: EdmRelationshipAttribute("ClubbyBook.Business", "fk_comment_user", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClubbyBook.Business.User), "comment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubbyBook.Business.Comment), true)]
[assembly: EdmRelationshipAttribute("ClubbyBook.Business", "authorcomment", "Author", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubbyBook.Business.Author), "comment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubbyBook.Business.Comment))]
[assembly: EdmRelationshipAttribute("ClubbyBook.Business", "bookcomment", "Book", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubbyBook.Business.Book), "comment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubbyBook.Business.Comment))]

#endregion

namespace ClubbyBook.Business
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Entities object using the connection string found in the 'Entities' section of the application configuration file.
        /// </summary>
        public Entities() : base("name=Entities", "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(string connectionString) : base(connectionString, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(EntityConnection connection) : base(connection, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Author> Authors
        {
            get
            {
                if ((_Authors == null))
                {
                    _Authors = base.CreateObjectSet<Author>("Authors");
                }
                return _Authors;
            }
        }
        private ObjectSet<Author> _Authors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AuthorRate> AuthorRates
        {
            get
            {
                if ((_AuthorRates == null))
                {
                    _AuthorRates = base.CreateObjectSet<AuthorRate>("AuthorRates");
                }
                return _AuthorRates;
            }
        }
        private ObjectSet<AuthorRate> _AuthorRates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Book> Books
        {
            get
            {
                if ((_Books == null))
                {
                    _Books = base.CreateObjectSet<Book>("Books");
                }
                return _Books;
            }
        }
        private ObjectSet<Book> _Books;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BookAuthor> BookAuthors
        {
            get
            {
                if ((_BookAuthors == null))
                {
                    _BookAuthors = base.CreateObjectSet<BookAuthor>("BookAuthors");
                }
                return _BookAuthors;
            }
        }
        private ObjectSet<BookAuthor> _BookAuthors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BookGenre> BookGenres
        {
            get
            {
                if ((_BookGenres == null))
                {
                    _BookGenres = base.CreateObjectSet<BookGenre>("BookGenres");
                }
                return _BookGenres;
            }
        }
        private ObjectSet<BookGenre> _BookGenres;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BookRate> BookRates
        {
            get
            {
                if ((_BookRates == null))
                {
                    _BookRates = base.CreateObjectSet<BookRate>("BookRates");
                }
                return _BookRates;
            }
        }
        private ObjectSet<BookRate> _BookRates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<City> Cities
        {
            get
            {
                if ((_Cities == null))
                {
                    _Cities = base.CreateObjectSet<City>("Cities");
                }
                return _Cities;
            }
        }
        private ObjectSet<City> _Cities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ConversationNotification> ConversationNotifications
        {
            get
            {
                if ((_ConversationNotifications == null))
                {
                    _ConversationNotifications = base.CreateObjectSet<ConversationNotification>("ConversationNotifications");
                }
                return _ConversationNotifications;
            }
        }
        private ObjectSet<ConversationNotification> _ConversationNotifications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<District> Districts
        {
            get
            {
                if ((_Districts == null))
                {
                    _Districts = base.CreateObjectSet<District>("Districts");
                }
                return _Districts;
            }
        }
        private ObjectSet<District> _Districts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeedbackNotification> FeedbackNotifications
        {
            get
            {
                if ((_FeedbackNotifications == null))
                {
                    _FeedbackNotifications = base.CreateObjectSet<FeedbackNotification>("FeedbackNotifications");
                }
                return _FeedbackNotifications;
            }
        }
        private ObjectSet<FeedbackNotification> _FeedbackNotifications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Genre> Genres
        {
            get
            {
                if ((_Genres == null))
                {
                    _Genres = base.CreateObjectSet<Genre>("Genres");
                }
                return _Genres;
            }
        }
        private ObjectSet<Genre> _Genres;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<News> News
        {
            get
            {
                if ((_News == null))
                {
                    _News = base.CreateObjectSet<News>("News");
                }
                return _News;
            }
        }
        private ObjectSet<News> _News;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Notification> Notifications
        {
            get
            {
                if ((_Notifications == null))
                {
                    _Notifications = base.CreateObjectSet<Notification>("Notifications");
                }
                return _Notifications;
            }
        }
        private ObjectSet<Notification> _Notifications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Profile> Profiles
        {
            get
            {
                if ((_Profiles == null))
                {
                    _Profiles = base.CreateObjectSet<Profile>("Profiles");
                }
                return _Profiles;
            }
        }
        private ObjectSet<Profile> _Profiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SystemNotification> SystemNotifications
        {
            get
            {
                if ((_SystemNotifications == null))
                {
                    _SystemNotifications = base.CreateObjectSet<SystemNotification>("SystemNotifications");
                }
                return _SystemNotifications;
            }
        }
        private ObjectSet<SystemNotification> _SystemNotifications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserBook> UserBooks
        {
            get
            {
                if ((_UserBooks == null))
                {
                    _UserBooks = base.CreateObjectSet<UserBook>("UserBooks");
                }
                return _UserBooks;
            }
        }
        private ObjectSet<UserBook> _UserBooks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserRole> UserRoles
        {
            get
            {
                if ((_UserRoles == null))
                {
                    _UserRoles = base.CreateObjectSet<UserRole>("UserRoles");
                }
                return _UserRoles;
            }
        }
        private ObjectSet<UserRole> _UserRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Comment> Comments
        {
            get
            {
                if ((_Comments == null))
                {
                    _Comments = base.CreateObjectSet<Comment>("Comments");
                }
                return _Comments;
            }
        }
        private ObjectSet<Comment> _Comments;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Authors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAuthors(Author author)
        {
            base.AddObject("Authors", author);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AuthorRates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAuthorRates(AuthorRate authorRate)
        {
            base.AddObject("AuthorRates", authorRate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Books EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBooks(Book book)
        {
            base.AddObject("Books", book);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BookAuthors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBookAuthors(BookAuthor bookAuthor)
        {
            base.AddObject("BookAuthors", bookAuthor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BookGenres EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBookGenres(BookGenre bookGenre)
        {
            base.AddObject("BookGenres", bookGenre);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BookRates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBookRates(BookRate bookRate)
        {
            base.AddObject("BookRates", bookRate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCities(City city)
        {
            base.AddObject("Cities", city);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ConversationNotifications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConversationNotifications(ConversationNotification conversationNotification)
        {
            base.AddObject("ConversationNotifications", conversationNotification);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Districts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDistricts(District district)
        {
            base.AddObject("Districts", district);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeedbackNotifications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeedbackNotifications(FeedbackNotification feedbackNotification)
        {
            base.AddObject("FeedbackNotifications", feedbackNotification);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Genres EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGenres(Genre genre)
        {
            base.AddObject("Genres", genre);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the News EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNews(News news)
        {
            base.AddObject("News", news);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Notifications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNotifications(Notification notification)
        {
            base.AddObject("Notifications", notification);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Profiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProfiles(Profile profile)
        {
            base.AddObject("Profiles", profile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SystemNotifications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSystemNotifications(SystemNotification systemNotification)
        {
            base.AddObject("SystemNotifications", systemNotification);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserBooks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserBooks(UserBook userBook)
        {
            base.AddObject("UserBooks", userBook);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserRoles(UserRole userRole)
        {
            base.AddObject("UserRoles", userRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Comments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToComments(Comment comment)
        {
            base.AddObject("Comments", comment);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClubbyBook.Business", Name="Author")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Author : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Author object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="lastModifiedDate">Initial value of the LastModifiedDate property.</param>
        /// <param name="sbType">Initial value of the sbType property.</param>
        /// <param name="sbGender">Initial value of the sbGender property.</param>
        public static Author CreateAuthor(global::System.Int32 id, global::System.String fullName, global::System.DateTime createdDate, global::System.DateTime lastModifiedDate, global::System.SByte sbType, global::System.SByte sbGender)
        {
            Author author = new Author();
            author.Id = id;
            author.FullName = fullName;
            author.CreatedDate = createdDate;
            author.LastModifiedDate = lastModifiedDate;
            author.sbType = sbType;
            author.sbGender = sbGender;
            return author;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BirthdayYear
        {
            get
            {
                return _BirthdayYear;
            }
            set
            {
                OnBirthdayYearChanging(value);
                ReportPropertyChanging("BirthdayYear");
                _BirthdayYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BirthdayYear");
                OnBirthdayYearChanged();
            }
        }
        private Nullable<global::System.Int32> _BirthdayYear;
        partial void OnBirthdayYearChanging(Nullable<global::System.Int32> value);
        partial void OnBirthdayYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeathYear
        {
            get
            {
                return _DeathYear;
            }
            set
            {
                OnDeathYearChanging(value);
                ReportPropertyChanging("DeathYear");
                _DeathYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeathYear");
                OnDeathYearChanged();
            }
        }
        private Nullable<global::System.Int32> _DeathYear;
        partial void OnDeathYearChanging(Nullable<global::System.Int32> value);
        partial void OnDeathYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortDescription
        {
            get
            {
                return _ShortDescription;
            }
            set
            {
                OnShortDescriptionChanging(value);
                ReportPropertyChanging("ShortDescription");
                _ShortDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortDescription");
                OnShortDescriptionChanged();
            }
        }
        private global::System.String _ShortDescription;
        partial void OnShortDescriptionChanging(global::System.String value);
        partial void OnShortDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Biography
        {
            get
            {
                return _Biography;
            }
            set
            {
                OnBiographyChanging(value);
                ReportPropertyChanging("Biography");
                _Biography = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Biography");
                OnBiographyChanged();
            }
        }
        private global::System.String _Biography;
        partial void OnBiographyChanging(global::System.String value);
        partial void OnBiographyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhotoPath
        {
            get
            {
                return _PhotoPath;
            }
            set
            {
                OnPhotoPathChanging(value);
                ReportPropertyChanging("PhotoPath");
                _PhotoPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhotoPath");
                OnPhotoPathChanged();
            }
        }
        private global::System.String _PhotoPath;
        partial void OnPhotoPathChanging(global::System.String value);
        partial void OnPhotoPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UrlRewrite
        {
            get
            {
                return _UrlRewrite;
            }
            set
            {
                OnUrlRewriteChanging(value);
                ReportPropertyChanging("UrlRewrite");
                _UrlRewrite = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UrlRewrite");
                OnUrlRewriteChanged();
            }
        }
        private global::System.String _UrlRewrite;
        partial void OnUrlRewriteChanging(global::System.String value);
        partial void OnUrlRewriteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastModifiedDate
        {
            get
            {
                return _LastModifiedDate;
            }
            set
            {
                OnLastModifiedDateChanging(value);
                ReportPropertyChanging("LastModifiedDate");
                _LastModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedDate");
                OnLastModifiedDateChanged();
            }
        }
        private global::System.DateTime _LastModifiedDate;
        partial void OnLastModifiedDateChanging(global::System.DateTime value);
        partial void OnLastModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.SByte sbType
        {
            get
            {
                return _sbType;
            }
            set
            {
                OnsbTypeChanging(value);
                ReportPropertyChanging("sbType");
                _sbType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("sbType");
                OnsbTypeChanged();
            }
        }
        private global::System.SByte _sbType;
        partial void OnsbTypeChanging(global::System.SByte value);
        partial void OnsbTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.SByte sbGender
        {
            get
            {
                return _sbGender;
            }
            set
            {
                OnsbGenderChanging(value);
                ReportPropertyChanging("sbGender");
                _sbGender = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("sbGender");
                OnsbGenderChanged();
            }
        }
        private global::System.SByte _sbGender;
        partial void OnsbGenderChanging(global::System.SByte value);
        partial void OnsbGenderChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_authorrate_book", "authorrate")]
        public EntityCollection<AuthorRate> AuthorRates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AuthorRate>("ClubbyBook.Business.fk_authorrate_book", "authorrate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AuthorRate>("ClubbyBook.Business.fk_authorrate_book", "authorrate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_bookauthor_author", "bookauthor")]
        public EntityCollection<BookAuthor> BookAuthors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BookAuthor>("ClubbyBook.Business.fk_bookauthor_author", "bookauthor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BookAuthor>("ClubbyBook.Business.fk_bookauthor_author", "bookauthor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "authorcomment", "comment")]
        public EntityCollection<Comment> Comments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Comment>("ClubbyBook.Business.authorcomment", "comment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Comment>("ClubbyBook.Business.authorcomment", "comment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClubbyBook.Business", Name="AuthorRate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AuthorRate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AuthorRate object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="authorId">Initial value of the AuthorId property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static AuthorRate CreateAuthorRate(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 authorId, global::System.Int32 value)
        {
            AuthorRate authorRate = new AuthorRate();
            authorRate.Id = id;
            authorRate.UserId = userId;
            authorRate.AuthorId = authorId;
            authorRate.Value = value;
            return authorRate;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AuthorId
        {
            get
            {
                return _AuthorId;
            }
            set
            {
                OnAuthorIdChanging(value);
                ReportPropertyChanging("AuthorId");
                _AuthorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AuthorId");
                OnAuthorIdChanged();
            }
        }
        private global::System.Int32 _AuthorId;
        partial void OnAuthorIdChanging(global::System.Int32 value);
        partial void OnAuthorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Int32 _Value;
        partial void OnValueChanging(global::System.Int32 value);
        partial void OnValueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_authorrate_book", "author")]
        public Author Author
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Author>("ClubbyBook.Business.fk_authorrate_book", "author").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Author>("ClubbyBook.Business.fk_authorrate_book", "author").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Author> AuthorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Author>("ClubbyBook.Business.fk_authorrate_book", "author");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Author>("ClubbyBook.Business.fk_authorrate_book", "author", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_authorrate_user", "user")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClubbyBook.Business.fk_authorrate_user", "user").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClubbyBook.Business.fk_authorrate_user", "user").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClubbyBook.Business.fk_authorrate_user", "user");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ClubbyBook.Business.fk_authorrate_user", "user", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClubbyBook.Business", Name="Book")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Book : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Book object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="confirmed">Initial value of the Confirmed property.</param>
        /// <param name="collection">Initial value of the Collection property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="lastModifiedDate">Initial value of the LastModifiedDate property.</param>
        public static Book CreateBook(global::System.Int32 id, global::System.String title, global::System.Boolean confirmed, global::System.Boolean collection, global::System.DateTime createdDate, global::System.DateTime lastModifiedDate)
        {
            Book book = new Book();
            book.Id = id;
            book.Title = title;
            book.Confirmed = confirmed;
            book.Collection = collection;
            book.CreatedDate = createdDate;
            book.LastModifiedDate = lastModifiedDate;
            return book;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OriginalTitle
        {
            get
            {
                return _OriginalTitle;
            }
            set
            {
                OnOriginalTitleChanging(value);
                ReportPropertyChanging("OriginalTitle");
                _OriginalTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OriginalTitle");
                OnOriginalTitleChanged();
            }
        }
        private global::System.String _OriginalTitle;
        partial void OnOriginalTitleChanging(global::System.String value);
        partial void OnOriginalTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CoverPath
        {
            get
            {
                return _CoverPath;
            }
            set
            {
                OnCoverPathChanging(value);
                ReportPropertyChanging("CoverPath");
                _CoverPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CoverPath");
                OnCoverPathChanged();
            }
        }
        private global::System.String _CoverPath;
        partial void OnCoverPathChanging(global::System.String value);
        partial void OnCoverPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UrlRewrite
        {
            get
            {
                return _UrlRewrite;
            }
            set
            {
                OnUrlRewriteChanging(value);
                ReportPropertyChanging("UrlRewrite");
                _UrlRewrite = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UrlRewrite");
                OnUrlRewriteChanged();
            }
        }
        private global::System.String _UrlRewrite;
        partial void OnUrlRewriteChanging(global::System.String value);
        partial void OnUrlRewriteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Confirmed
        {
            get
            {
                return _Confirmed;
            }
            set
            {
                OnConfirmedChanging(value);
                ReportPropertyChanging("Confirmed");
                _Confirmed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Confirmed");
                OnConfirmedChanged();
            }
        }
        private global::System.Boolean _Confirmed;
        partial void OnConfirmedChanging(global::System.Boolean value);
        partial void OnConfirmedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Collection
        {
            get
            {
                return _Collection;
            }
            set
            {
                OnCollectionChanging(value);
                ReportPropertyChanging("Collection");
                _Collection = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Collection");
                OnCollectionChanged();
            }
        }
        private global::System.Boolean _Collection;
        partial void OnCollectionChanging(global::System.Boolean value);
        partial void OnCollectionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastModifiedDate
        {
            get
            {
                return _LastModifiedDate;
            }
            set
            {
                OnLastModifiedDateChanging(value);
                ReportPropertyChanging("LastModifiedDate");
                _LastModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedDate");
                OnLastModifiedDateChanged();
            }
        }
        private global::System.DateTime _LastModifiedDate;
        partial void OnLastModifiedDateChanging(global::System.DateTime value);
        partial void OnLastModifiedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_bookauthor_book", "bookauthor")]
        public EntityCollection<BookAuthor> BookAuthors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BookAuthor>("ClubbyBook.Business.fk_bookauthor_book", "bookauthor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BookAuthor>("ClubbyBook.Business.fk_bookauthor_book", "bookauthor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_bookgenre_book", "bookgenre")]
        public EntityCollection<BookGenre> BookGenres
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BookGenre>("ClubbyBook.Business.fk_bookgenre_book", "bookgenre");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BookGenre>("ClubbyBook.Business.fk_bookgenre_book", "bookgenre", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_bookrate_book", "bookrate")]
        public EntityCollection<BookRate> BookRates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BookRate>("ClubbyBook.Business.fk_bookrate_book", "bookrate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BookRate>("ClubbyBook.Business.fk_bookrate_book", "bookrate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_userbook_book", "userbook")]
        public EntityCollection<UserBook> UserBooks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserBook>("ClubbyBook.Business.fk_userbook_book", "userbook");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserBook>("ClubbyBook.Business.fk_userbook_book", "userbook", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "bookcomment", "comment")]
        public EntityCollection<Comment> Comments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Comment>("ClubbyBook.Business.bookcomment", "comment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Comment>("ClubbyBook.Business.bookcomment", "comment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClubbyBook.Business", Name="BookAuthor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BookAuthor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BookAuthor object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="bookId">Initial value of the BookId property.</param>
        /// <param name="authorId">Initial value of the AuthorId property.</param>
        public static BookAuthor CreateBookAuthor(global::System.Int32 id, global::System.Int32 bookId, global::System.Int32 authorId)
        {
            BookAuthor bookAuthor = new BookAuthor();
            bookAuthor.Id = id;
            bookAuthor.BookId = bookId;
            bookAuthor.AuthorId = authorId;
            return bookAuthor;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BookId
        {
            get
            {
                return _BookId;
            }
            set
            {
                OnBookIdChanging(value);
                ReportPropertyChanging("BookId");
                _BookId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BookId");
                OnBookIdChanged();
            }
        }
        private global::System.Int32 _BookId;
        partial void OnBookIdChanging(global::System.Int32 value);
        partial void OnBookIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AuthorId
        {
            get
            {
                return _AuthorId;
            }
            set
            {
                OnAuthorIdChanging(value);
                ReportPropertyChanging("AuthorId");
                _AuthorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AuthorId");
                OnAuthorIdChanged();
            }
        }
        private global::System.Int32 _AuthorId;
        partial void OnAuthorIdChanging(global::System.Int32 value);
        partial void OnAuthorIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_bookauthor_author", "author")]
        public Author Author
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Author>("ClubbyBook.Business.fk_bookauthor_author", "author").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Author>("ClubbyBook.Business.fk_bookauthor_author", "author").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Author> AuthorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Author>("ClubbyBook.Business.fk_bookauthor_author", "author");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Author>("ClubbyBook.Business.fk_bookauthor_author", "author", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_bookauthor_book", "book")]
        public Book Book
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Book>("ClubbyBook.Business.fk_bookauthor_book", "book").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Book>("ClubbyBook.Business.fk_bookauthor_book", "book").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Book> BookReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Book>("ClubbyBook.Business.fk_bookauthor_book", "book");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Book>("ClubbyBook.Business.fk_bookauthor_book", "book", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClubbyBook.Business", Name="BookGenre")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BookGenre : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BookGenre object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="bookId">Initial value of the BookId property.</param>
        /// <param name="genreId">Initial value of the GenreId property.</param>
        public static BookGenre CreateBookGenre(global::System.Int32 id, global::System.Int32 bookId, global::System.Int32 genreId)
        {
            BookGenre bookGenre = new BookGenre();
            bookGenre.Id = id;
            bookGenre.BookId = bookId;
            bookGenre.GenreId = genreId;
            return bookGenre;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BookId
        {
            get
            {
                return _BookId;
            }
            set
            {
                OnBookIdChanging(value);
                ReportPropertyChanging("BookId");
                _BookId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BookId");
                OnBookIdChanged();
            }
        }
        private global::System.Int32 _BookId;
        partial void OnBookIdChanging(global::System.Int32 value);
        partial void OnBookIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GenreId
        {
            get
            {
                return _GenreId;
            }
            set
            {
                OnGenreIdChanging(value);
                ReportPropertyChanging("GenreId");
                _GenreId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GenreId");
                OnGenreIdChanged();
            }
        }
        private global::System.Int32 _GenreId;
        partial void OnGenreIdChanging(global::System.Int32 value);
        partial void OnGenreIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_bookgenre_book", "book")]
        public Book Book
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Book>("ClubbyBook.Business.fk_bookgenre_book", "book").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Book>("ClubbyBook.Business.fk_bookgenre_book", "book").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Book> BookReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Book>("ClubbyBook.Business.fk_bookgenre_book", "book");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Book>("ClubbyBook.Business.fk_bookgenre_book", "book", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_bookgenre_genre", "genre")]
        public Genre Genre
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Genre>("ClubbyBook.Business.fk_bookgenre_genre", "genre").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Genre>("ClubbyBook.Business.fk_bookgenre_genre", "genre").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Genre> GenreReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Genre>("ClubbyBook.Business.fk_bookgenre_genre", "genre");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Genre>("ClubbyBook.Business.fk_bookgenre_genre", "genre", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClubbyBook.Business", Name="BookRate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BookRate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BookRate object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="bookId">Initial value of the BookId property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static BookRate CreateBookRate(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 bookId, global::System.Int32 value)
        {
            BookRate bookRate = new BookRate();
            bookRate.Id = id;
            bookRate.UserId = userId;
            bookRate.BookId = bookId;
            bookRate.Value = value;
            return bookRate;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BookId
        {
            get
            {
                return _BookId;
            }
            set
            {
                OnBookIdChanging(value);
                ReportPropertyChanging("BookId");
                _BookId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BookId");
                OnBookIdChanged();
            }
        }
        private global::System.Int32 _BookId;
        partial void OnBookIdChanging(global::System.Int32 value);
        partial void OnBookIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Int32 _Value;
        partial void OnValueChanging(global::System.Int32 value);
        partial void OnValueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_bookrate_book", "book")]
        public Book Book
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Book>("ClubbyBook.Business.fk_bookrate_book", "book").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Book>("ClubbyBook.Business.fk_bookrate_book", "book").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Book> BookReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Book>("ClubbyBook.Business.fk_bookrate_book", "book");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Book>("ClubbyBook.Business.fk_bookrate_book", "book", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_bookrate_user", "user")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClubbyBook.Business.fk_bookrate_user", "user").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClubbyBook.Business.fk_bookrate_user", "user").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClubbyBook.Business.fk_bookrate_user", "user");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ClubbyBook.Business.fk_bookrate_user", "user", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClubbyBook.Business", Name="City")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class City : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new City object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="countryId">Initial value of the CountryId property.</param>
        /// <param name="districtId">Initial value of the DistrictId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="default">Initial value of the Default property.</param>
        public static City CreateCity(global::System.Int32 id, global::System.Int32 countryId, global::System.Int32 districtId, global::System.String name, global::System.Boolean @default)
        {
            City city = new City();
            city.Id = id;
            city.CountryId = countryId;
            city.DistrictId = districtId;
            city.Name = name;
            city.Default = @default;
            return city;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private global::System.Int32 _CountryId;
        partial void OnCountryIdChanging(global::System.Int32 value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DistrictId
        {
            get
            {
                return _DistrictId;
            }
            set
            {
                OnDistrictIdChanging(value);
                ReportPropertyChanging("DistrictId");
                _DistrictId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DistrictId");
                OnDistrictIdChanged();
            }
        }
        private global::System.Int32 _DistrictId;
        partial void OnDistrictIdChanging(global::System.Int32 value);
        partial void OnDistrictIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UrlRewrite
        {
            get
            {
                return _UrlRewrite;
            }
            set
            {
                OnUrlRewriteChanging(value);
                ReportPropertyChanging("UrlRewrite");
                _UrlRewrite = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UrlRewrite");
                OnUrlRewriteChanged();
            }
        }
        private global::System.String _UrlRewrite;
        partial void OnUrlRewriteChanging(global::System.String value);
        partial void OnUrlRewriteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Default
        {
            get
            {
                return _Default;
            }
            set
            {
                OnDefaultChanging(value);
                ReportPropertyChanging("Default");
                _Default = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Default");
                OnDefaultChanged();
            }
        }
        private global::System.Boolean _Default;
        partial void OnDefaultChanging(global::System.Boolean value);
        partial void OnDefaultChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_city_country", "country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("ClubbyBook.Business.fk_city_country", "country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("ClubbyBook.Business.fk_city_country", "country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("ClubbyBook.Business.fk_city_country", "country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("ClubbyBook.Business.fk_city_country", "country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_city_district", "district")]
        public District District
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<District>("ClubbyBook.Business.fk_city_district", "district").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<District>("ClubbyBook.Business.fk_city_district", "district").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<District> DistrictReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<District>("ClubbyBook.Business.fk_city_district", "district");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<District>("ClubbyBook.Business.fk_city_district", "district", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_profile_city", "profile")]
        public EntityCollection<Profile> Profiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Profile>("ClubbyBook.Business.fk_profile_city", "profile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Profile>("ClubbyBook.Business.fk_profile_city", "profile", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClubbyBook.Business", Name="Comment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Comment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Comment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static Comment CreateComment(global::System.Int32 id, global::System.Int32 userId, global::System.String message, global::System.DateTime createdDate)
        {
            Comment comment = new Comment();
            comment.Id = id;
            comment.UserId = userId;
            comment.Message = message;
            comment.CreatedDate = createdDate;
            return comment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_comment_user", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClubbyBook.Business.fk_comment_user", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClubbyBook.Business.fk_comment_user", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClubbyBook.Business.fk_comment_user", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ClubbyBook.Business.fk_comment_user", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClubbyBook.Business", Name="ConversationNotification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ConversationNotification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ConversationNotification object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="notificationId">Initial value of the NotificationId property.</param>
        /// <param name="isNew">Initial value of the IsNew property.</param>
        /// <param name="sbDirection">Initial value of the sbDirection property.</param>
        /// <param name="fromUserId">Initial value of the FromUserId property.</param>
        /// <param name="toUserId">Initial value of the ToUserId property.</param>
        public static ConversationNotification CreateConversationNotification(global::System.Int32 id, global::System.Int32 notificationId, global::System.Boolean isNew, global::System.SByte sbDirection, global::System.Int32 fromUserId, global::System.Int32 toUserId)
        {
            ConversationNotification conversationNotification = new ConversationNotification();
            conversationNotification.Id = id;
            conversationNotification.NotificationId = notificationId;
            conversationNotification.IsNew = isNew;
            conversationNotification.sbDirection = sbDirection;
            conversationNotification.FromUserId = fromUserId;
            conversationNotification.ToUserId = toUserId;
            return conversationNotification;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NotificationId
        {
            get
            {
                return _NotificationId;
            }
            set
            {
                OnNotificationIdChanging(value);
                ReportPropertyChanging("NotificationId");
                _NotificationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NotificationId");
                OnNotificationIdChanged();
            }
        }
        private global::System.Int32 _NotificationId;
        partial void OnNotificationIdChanging(global::System.Int32 value);
        partial void OnNotificationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsNew
        {
            get
            {
                return _IsNew;
            }
            set
            {
                OnIsNewChanging(value);
                ReportPropertyChanging("IsNew");
                _IsNew = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsNew");
                OnIsNewChanged();
            }
        }
        private global::System.Boolean _IsNew;
        partial void OnIsNewChanging(global::System.Boolean value);
        partial void OnIsNewChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.SByte sbDirection
        {
            get
            {
                return _sbDirection;
            }
            set
            {
                OnsbDirectionChanging(value);
                ReportPropertyChanging("sbDirection");
                _sbDirection = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("sbDirection");
                OnsbDirectionChanged();
            }
        }
        private global::System.SByte _sbDirection;
        partial void OnsbDirectionChanging(global::System.SByte value);
        partial void OnsbDirectionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FromUserId
        {
            get
            {
                return _FromUserId;
            }
            set
            {
                OnFromUserIdChanging(value);
                ReportPropertyChanging("FromUserId");
                _FromUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromUserId");
                OnFromUserIdChanged();
            }
        }
        private global::System.Int32 _FromUserId;
        partial void OnFromUserIdChanging(global::System.Int32 value);
        partial void OnFromUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ToUserId
        {
            get
            {
                return _ToUserId;
            }
            set
            {
                OnToUserIdChanging(value);
                ReportPropertyChanging("ToUserId");
                _ToUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToUserId");
                OnToUserIdChanged();
            }
        }
        private global::System.Int32 _ToUserId;
        partial void OnToUserIdChanging(global::System.Int32 value);
        partial void OnToUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_conversationnotification_fromuser", "user")]
        public User FromUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClubbyBook.Business.fk_conversationnotification_fromuser", "user").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClubbyBook.Business.fk_conversationnotification_fromuser", "user").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> FromUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClubbyBook.Business.fk_conversationnotification_fromuser", "user");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ClubbyBook.Business.fk_conversationnotification_fromuser", "user", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_conversationnotification_notificationid", "notification")]
        public Notification Notification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Notification>("ClubbyBook.Business.fk_conversationnotification_notificationid", "notification").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Notification>("ClubbyBook.Business.fk_conversationnotification_notificationid", "notification").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Notification> NotificationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Notification>("ClubbyBook.Business.fk_conversationnotification_notificationid", "notification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Notification>("ClubbyBook.Business.fk_conversationnotification_notificationid", "notification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_conversationnotification_touser", "user")]
        public User ToUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClubbyBook.Business.fk_conversationnotification_touser", "user").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClubbyBook.Business.fk_conversationnotification_touser", "user").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> ToUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClubbyBook.Business.fk_conversationnotification_touser", "user");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ClubbyBook.Business.fk_conversationnotification_touser", "user", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClubbyBook.Business", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Country CreateCountry(global::System.Int32 id, global::System.String name)
        {
            Country country = new Country();
            country.Id = id;
            country.Name = name;
            return country;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_city_country", "city")]
        public EntityCollection<City> Cities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<City>("ClubbyBook.Business.fk_city_country", "city");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<City>("ClubbyBook.Business.fk_city_country", "city", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_district_country", "district")]
        public EntityCollection<District> Districts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<District>("ClubbyBook.Business.fk_district_country", "district");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<District>("ClubbyBook.Business.fk_district_country", "district", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClubbyBook.Business", Name="District")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class District : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new District object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="countryId">Initial value of the CountryId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static District CreateDistrict(global::System.Int32 id, global::System.Int32 countryId, global::System.String name)
        {
            District district = new District();
            district.Id = id;
            district.CountryId = countryId;
            district.Name = name;
            return district;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private global::System.Int32 _CountryId;
        partial void OnCountryIdChanging(global::System.Int32 value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_city_district", "city")]
        public EntityCollection<City> Cities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<City>("ClubbyBook.Business.fk_city_district", "city");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<City>("ClubbyBook.Business.fk_city_district", "city", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_district_country", "country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("ClubbyBook.Business.fk_district_country", "country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("ClubbyBook.Business.fk_district_country", "country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("ClubbyBook.Business.fk_district_country", "country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("ClubbyBook.Business.fk_district_country", "country", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClubbyBook.Business", Name="FeedbackNotification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeedbackNotification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeedbackNotification object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="notificationId">Initial value of the NotificationId property.</param>
        /// <param name="isNew">Initial value of the IsNew property.</param>
        public static FeedbackNotification CreateFeedbackNotification(global::System.Int32 id, global::System.Int32 notificationId, global::System.Boolean isNew)
        {
            FeedbackNotification feedbackNotification = new FeedbackNotification();
            feedbackNotification.Id = id;
            feedbackNotification.NotificationId = notificationId;
            feedbackNotification.IsNew = isNew;
            return feedbackNotification;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NotificationId
        {
            get
            {
                return _NotificationId;
            }
            set
            {
                OnNotificationIdChanging(value);
                ReportPropertyChanging("NotificationId");
                _NotificationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NotificationId");
                OnNotificationIdChanged();
            }
        }
        private global::System.Int32 _NotificationId;
        partial void OnNotificationIdChanging(global::System.Int32 value);
        partial void OnNotificationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsNew
        {
            get
            {
                return _IsNew;
            }
            set
            {
                OnIsNewChanging(value);
                ReportPropertyChanging("IsNew");
                _IsNew = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsNew");
                OnIsNewChanged();
            }
        }
        private global::System.Boolean _IsNew;
        partial void OnIsNewChanging(global::System.Boolean value);
        partial void OnIsNewChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OwnerUserId
        {
            get
            {
                return _OwnerUserId;
            }
            set
            {
                OnOwnerUserIdChanging(value);
                ReportPropertyChanging("OwnerUserId");
                _OwnerUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerUserId");
                OnOwnerUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _OwnerUserId;
        partial void OnOwnerUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnOwnerUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_feedbacknotification_notificationid", "notification")]
        public Notification Notification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Notification>("ClubbyBook.Business.fk_feedbacknotification_notificationid", "notification").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Notification>("ClubbyBook.Business.fk_feedbacknotification_notificationid", "notification").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Notification> NotificationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Notification>("ClubbyBook.Business.fk_feedbacknotification_notificationid", "notification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Notification>("ClubbyBook.Business.fk_feedbacknotification_notificationid", "notification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_feedbacknotification_owneruser", "user")]
        public User OwnerUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClubbyBook.Business.fk_feedbacknotification_owneruser", "user").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClubbyBook.Business.fk_feedbacknotification_owneruser", "user").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> OwnerUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClubbyBook.Business.fk_feedbacknotification_owneruser", "user");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ClubbyBook.Business.fk_feedbacknotification_owneruser", "user", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClubbyBook.Business", Name="Genre")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Genre : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Genre object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="order">Initial value of the Order property.</param>
        public static Genre CreateGenre(global::System.Int32 id, global::System.String name, global::System.Int32 order)
        {
            Genre genre = new Genre();
            genre.Id = id;
            genre.Name = name;
            genre.Order = order;
            return genre;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UrlRewrite
        {
            get
            {
                return _UrlRewrite;
            }
            set
            {
                OnUrlRewriteChanging(value);
                ReportPropertyChanging("UrlRewrite");
                _UrlRewrite = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UrlRewrite");
                OnUrlRewriteChanged();
            }
        }
        private global::System.String _UrlRewrite;
        partial void OnUrlRewriteChanging(global::System.String value);
        partial void OnUrlRewriteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentId;
        partial void OnParentIdChanging(Nullable<global::System.Int32> value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Order
        {
            get
            {
                return _Order;
            }
            set
            {
                OnOrderChanging(value);
                ReportPropertyChanging("Order");
                _Order = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Order");
                OnOrderChanged();
            }
        }
        private global::System.Int32 _Order;
        partial void OnOrderChanging(global::System.Int32 value);
        partial void OnOrderChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_bookgenre_genre", "bookgenre")]
        public EntityCollection<BookGenre> BookGenres
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BookGenre>("ClubbyBook.Business.fk_bookgenre_genre", "bookgenre");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BookGenre>("ClubbyBook.Business.fk_bookgenre_genre", "bookgenre", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_genre_genre", "genre1")]
        public EntityCollection<Genre> Children
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Genre>("ClubbyBook.Business.fk_genre_genre", "genre1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Genre>("ClubbyBook.Business.fk_genre_genre", "genre1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_genre_genre", "genre")]
        public Genre Parent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Genre>("ClubbyBook.Business.fk_genre_genre", "genre").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Genre>("ClubbyBook.Business.fk_genre_genre", "genre").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Genre> ParentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Genre>("ClubbyBook.Business.fk_genre_genre", "genre");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Genre>("ClubbyBook.Business.fk_genre_genre", "genre", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClubbyBook.Business", Name="News")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class News : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new News object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="lastModifiedDate">Initial value of the LastModifiedDate property.</param>
        public static News CreateNews(global::System.Int32 id, global::System.String title, global::System.String message, global::System.DateTime createdDate, global::System.DateTime lastModifiedDate)
        {
            News news = new News();
            news.Id = id;
            news.Title = title;
            news.Message = message;
            news.CreatedDate = createdDate;
            news.LastModifiedDate = lastModifiedDate;
            return news;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UrlRewrite
        {
            get
            {
                return _UrlRewrite;
            }
            set
            {
                OnUrlRewriteChanging(value);
                ReportPropertyChanging("UrlRewrite");
                _UrlRewrite = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UrlRewrite");
                OnUrlRewriteChanged();
            }
        }
        private global::System.String _UrlRewrite;
        partial void OnUrlRewriteChanging(global::System.String value);
        partial void OnUrlRewriteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastModifiedDate
        {
            get
            {
                return _LastModifiedDate;
            }
            set
            {
                OnLastModifiedDateChanging(value);
                ReportPropertyChanging("LastModifiedDate");
                _LastModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedDate");
                OnLastModifiedDateChanged();
            }
        }
        private global::System.DateTime _LastModifiedDate;
        partial void OnLastModifiedDateChanging(global::System.DateTime value);
        partial void OnLastModifiedDateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClubbyBook.Business", Name="Notification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Notification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Notification object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static Notification CreateNotification(global::System.Int32 id, global::System.String message, global::System.DateTime createdDate)
        {
            Notification notification = new Notification();
            notification.Id = id;
            notification.Message = message;
            notification.CreatedDate = createdDate;
            return notification;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_conversationnotification_notificationid", "conversationnotification")]
        public EntityCollection<ConversationNotification> ConversationNotifications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ConversationNotification>("ClubbyBook.Business.fk_conversationnotification_notificationid", "conversationnotification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ConversationNotification>("ClubbyBook.Business.fk_conversationnotification_notificationid", "conversationnotification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_feedbacknotification_notificationid", "feedbacknotification")]
        public EntityCollection<FeedbackNotification> FeedbackNotifications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeedbackNotification>("ClubbyBook.Business.fk_feedbacknotification_notificationid", "feedbacknotification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeedbackNotification>("ClubbyBook.Business.fk_feedbacknotification_notificationid", "feedbacknotification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_systemnotification_notificationid", "systemnotification")]
        public EntityCollection<SystemNotification> SystemNotifications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SystemNotification>("ClubbyBook.Business.fk_systemnotification_notificationid", "systemnotification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SystemNotification>("ClubbyBook.Business.fk_systemnotification_notificationid", "systemnotification", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClubbyBook.Business", Name="Profile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Profile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Profile object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static Profile CreateProfile(global::System.Int32 id, global::System.Int32 userId)
        {
            Profile profile = new Profile();
            profile.Id = id;
            profile.UserId = userId;
            return profile;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                OnSurnameChanging(value);
                ReportPropertyChanging("Surname");
                _Surname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Surname");
                OnSurnameChanged();
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Nickname
        {
            get
            {
                return _Nickname;
            }
            set
            {
                OnNicknameChanging(value);
                ReportPropertyChanging("Nickname");
                _Nickname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Nickname");
                OnNicknameChanged();
            }
        }
        private global::System.String _Nickname;
        partial void OnNicknameChanging(global::System.String value);
        partial void OnNicknameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Birthday
        {
            get
            {
                return _Birthday;
            }
            set
            {
                OnBirthdayChanging(value);
                ReportPropertyChanging("Birthday");
                _Birthday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Birthday");
                OnBirthdayChanged();
            }
        }
        private Nullable<global::System.DateTime> _Birthday;
        partial void OnBirthdayChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthdayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.SByte> sbGender
        {
            get
            {
                return _sbGender;
            }
            set
            {
                OnsbGenderChanging(value);
                ReportPropertyChanging("sbGender");
                _sbGender = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("sbGender");
                OnsbGenderChanged();
            }
        }
        private Nullable<global::System.SByte> _sbGender;
        partial void OnsbGenderChanging(Nullable<global::System.SByte> value);
        partial void OnsbGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityId
        {
            get
            {
                return _CityId;
            }
            set
            {
                OnCityIdChanging(value);
                ReportPropertyChanging("CityId");
                _CityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityId");
                OnCityIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CityId;
        partial void OnCityIdChanging(Nullable<global::System.Int32> value);
        partial void OnCityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImagePath
        {
            get
            {
                return _ImagePath;
            }
            set
            {
                OnImagePathChanging(value);
                ReportPropertyChanging("ImagePath");
                _ImagePath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImagePath");
                OnImagePathChanged();
            }
        }
        private global::System.String _ImagePath;
        partial void OnImagePathChanging(global::System.String value);
        partial void OnImagePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UrlRewrite
        {
            get
            {
                return _UrlRewrite;
            }
            set
            {
                OnUrlRewriteChanging(value);
                ReportPropertyChanging("UrlRewrite");
                _UrlRewrite = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UrlRewrite");
                OnUrlRewriteChanged();
            }
        }
        private global::System.String _UrlRewrite;
        partial void OnUrlRewriteChanging(global::System.String value);
        partial void OnUrlRewriteChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_profile_city", "city")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("ClubbyBook.Business.fk_profile_city", "city").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("ClubbyBook.Business.fk_profile_city", "city").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("ClubbyBook.Business.fk_profile_city", "city");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("ClubbyBook.Business.fk_profile_city", "city", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_profile_user", "user")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClubbyBook.Business.fk_profile_user", "user").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClubbyBook.Business.fk_profile_user", "user").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClubbyBook.Business.fk_profile_user", "user");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ClubbyBook.Business.fk_profile_user", "user", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClubbyBook.Business", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Role CreateRole(global::System.Int32 id, global::System.String name)
        {
            Role role = new Role();
            role.Id = id;
            role.Name = name;
            return role;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_userrole_role", "userrole")]
        public EntityCollection<UserRole> UserRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserRole>("ClubbyBook.Business.fk_userrole_role", "userrole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserRole>("ClubbyBook.Business.fk_userrole_role", "userrole", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClubbyBook.Business", Name="SystemNotification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SystemNotification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SystemNotification object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="notificationId">Initial value of the NotificationId property.</param>
        /// <param name="sbType">Initial value of the sbType property.</param>
        /// <param name="isNew">Initial value of the IsNew property.</param>
        /// <param name="ownerUserId">Initial value of the OwnerUserId property.</param>
        public static SystemNotification CreateSystemNotification(global::System.Int32 id, global::System.Int32 notificationId, global::System.SByte sbType, global::System.Boolean isNew, global::System.Int32 ownerUserId)
        {
            SystemNotification systemNotification = new SystemNotification();
            systemNotification.Id = id;
            systemNotification.NotificationId = notificationId;
            systemNotification.sbType = sbType;
            systemNotification.IsNew = isNew;
            systemNotification.OwnerUserId = ownerUserId;
            return systemNotification;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NotificationId
        {
            get
            {
                return _NotificationId;
            }
            set
            {
                OnNotificationIdChanging(value);
                ReportPropertyChanging("NotificationId");
                _NotificationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NotificationId");
                OnNotificationIdChanged();
            }
        }
        private global::System.Int32 _NotificationId;
        partial void OnNotificationIdChanging(global::System.Int32 value);
        partial void OnNotificationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.SByte sbType
        {
            get
            {
                return _sbType;
            }
            set
            {
                OnsbTypeChanging(value);
                ReportPropertyChanging("sbType");
                _sbType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("sbType");
                OnsbTypeChanged();
            }
        }
        private global::System.SByte _sbType;
        partial void OnsbTypeChanging(global::System.SByte value);
        partial void OnsbTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsNew
        {
            get
            {
                return _IsNew;
            }
            set
            {
                OnIsNewChanging(value);
                ReportPropertyChanging("IsNew");
                _IsNew = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsNew");
                OnIsNewChanged();
            }
        }
        private global::System.Boolean _IsNew;
        partial void OnIsNewChanging(global::System.Boolean value);
        partial void OnIsNewChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OwnerUserId
        {
            get
            {
                return _OwnerUserId;
            }
            set
            {
                OnOwnerUserIdChanging(value);
                ReportPropertyChanging("OwnerUserId");
                _OwnerUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerUserId");
                OnOwnerUserIdChanged();
            }
        }
        private global::System.Int32 _OwnerUserId;
        partial void OnOwnerUserIdChanging(global::System.Int32 value);
        partial void OnOwnerUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_systemnotification_notificationid", "notification")]
        public Notification Notification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Notification>("ClubbyBook.Business.fk_systemnotification_notificationid", "notification").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Notification>("ClubbyBook.Business.fk_systemnotification_notificationid", "notification").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Notification> NotificationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Notification>("ClubbyBook.Business.fk_systemnotification_notificationid", "notification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Notification>("ClubbyBook.Business.fk_systemnotification_notificationid", "notification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_systemnotification_owneruser", "user")]
        public User OwnerUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClubbyBook.Business.fk_systemnotification_owneruser", "user").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClubbyBook.Business.fk_systemnotification_owneruser", "user").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> OwnerUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClubbyBook.Business.fk_systemnotification_owneruser", "user");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ClubbyBook.Business.fk_systemnotification_owneruser", "user", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClubbyBook.Business", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="eMail">Initial value of the EMail property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="lastAccessDate">Initial value of the LastAccessDate property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String eMail, global::System.String password, global::System.DateTime createdDate, global::System.Boolean isDeleted, global::System.DateTime lastAccessDate)
        {
            User user = new User();
            user.Id = id;
            user.EMail = eMail;
            user.Password = password;
            user.CreatedDate = createdDate;
            user.IsDeleted = isDeleted;
            user.LastAccessDate = lastAccessDate;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EMail
        {
            get
            {
                return _EMail;
            }
            set
            {
                OnEMailChanging(value);
                ReportPropertyChanging("EMail");
                _EMail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EMail");
                OnEMailChanged();
            }
        }
        private global::System.String _EMail;
        partial void OnEMailChanging(global::System.String value);
        partial void OnEMailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastAccessDate
        {
            get
            {
                return _LastAccessDate;
            }
            set
            {
                OnLastAccessDateChanging(value);
                ReportPropertyChanging("LastAccessDate");
                _LastAccessDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastAccessDate");
                OnLastAccessDateChanged();
            }
        }
        private global::System.DateTime _LastAccessDate;
        partial void OnLastAccessDateChanging(global::System.DateTime value);
        partial void OnLastAccessDateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClubbyBook.Business", Name="UserBook")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserBook : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserBook object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="bookId">Initial value of the BookId property.</param>
        /// <param name="iStatus">Initial value of the iStatus property.</param>
        /// <param name="iOffer">Initial value of the iOffer property.</param>
        /// <param name="iBookType">Initial value of the iBookType property.</param>
        public static UserBook CreateUserBook(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 bookId, global::System.Int32 iStatus, global::System.Int32 iOffer, global::System.Int32 iBookType)
        {
            UserBook userBook = new UserBook();
            userBook.Id = id;
            userBook.UserId = userId;
            userBook.BookId = bookId;
            userBook.iStatus = iStatus;
            userBook.iOffer = iOffer;
            userBook.iBookType = iBookType;
            return userBook;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BookId
        {
            get
            {
                return _BookId;
            }
            set
            {
                OnBookIdChanging(value);
                ReportPropertyChanging("BookId");
                _BookId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BookId");
                OnBookIdChanged();
            }
        }
        private global::System.Int32 _BookId;
        partial void OnBookIdChanging(global::System.Int32 value);
        partial void OnBookIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 iStatus
        {
            get
            {
                return _iStatus;
            }
            set
            {
                OniStatusChanging(value);
                ReportPropertyChanging("iStatus");
                _iStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("iStatus");
                OniStatusChanged();
            }
        }
        private global::System.Int32 _iStatus;
        partial void OniStatusChanging(global::System.Int32 value);
        partial void OniStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 iOffer
        {
            get
            {
                return _iOffer;
            }
            set
            {
                OniOfferChanging(value);
                ReportPropertyChanging("iOffer");
                _iOffer = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("iOffer");
                OniOfferChanged();
            }
        }
        private global::System.Int32 _iOffer;
        partial void OniOfferChanging(global::System.Int32 value);
        partial void OniOfferChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 iBookType
        {
            get
            {
                return _iBookType;
            }
            set
            {
                OniBookTypeChanging(value);
                ReportPropertyChanging("iBookType");
                _iBookType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("iBookType");
                OniBookTypeChanged();
            }
        }
        private global::System.Int32 _iBookType;
        partial void OniBookTypeChanging(global::System.Int32 value);
        partial void OniBookTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_userbook_book", "book")]
        public Book Book
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Book>("ClubbyBook.Business.fk_userbook_book", "book").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Book>("ClubbyBook.Business.fk_userbook_book", "book").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Book> BookReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Book>("ClubbyBook.Business.fk_userbook_book", "book");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Book>("ClubbyBook.Business.fk_userbook_book", "book", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_userbook_user", "user")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClubbyBook.Business.fk_userbook_user", "user").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClubbyBook.Business.fk_userbook_user", "user").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClubbyBook.Business.fk_userbook_user", "user");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ClubbyBook.Business.fk_userbook_user", "user", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClubbyBook.Business", Name="UserRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserRole object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        public static UserRole CreateUserRole(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 roleId)
        {
            UserRole userRole = new UserRole();
            userRole.Id = id;
            userRole.UserId = userId;
            userRole.RoleId = roleId;
            return userRole;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_userrole_role", "role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("ClubbyBook.Business.fk_userrole_role", "role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("ClubbyBook.Business.fk_userrole_role", "role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("ClubbyBook.Business.fk_userrole_role", "role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("ClubbyBook.Business.fk_userrole_role", "role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClubbyBook.Business", "fk_userrole_user", "user")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClubbyBook.Business.fk_userrole_user", "user").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClubbyBook.Business.fk_userrole_user", "user").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ClubbyBook.Business.fk_userrole_user", "user");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ClubbyBook.Business.fk_userrole_user", "user", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
